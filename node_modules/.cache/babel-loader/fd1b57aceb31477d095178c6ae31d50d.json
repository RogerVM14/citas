{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"/Users/roger/Documents/ROGER/CURSO Apps/citas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/roger/Documents/ROGER/CURSO Apps/citas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import Formulario from'./components/Formulario';import Cita from'./components/Cita';function App(){//Citas en localStorage\nvar citasIniciales=localStorage.getItem('cita');if(!citasIniciales){citasIniciales=[];}//Arreglo de citas\nvar _useState=useState(citasIniciales),_useState2=_slicedToArray(_useState,2),citas=_useState2[0],setCitas=_useState2[1];//Use Effect para realizar ciertas operaciones cuando el state cambia\nuseEffect(function(){var citasIniciales=localStorage.getItem('cita');if(citasIniciales){localStorage.setItem('citas',JSON.stringify(citas));}else{localStorage.setItem('citas',JSON.stringify([]));}},[citas]);//Funcion que tome las citas actuales y agregue la nueva\nvar crearCita=function crearCita(cita){setCitas([].concat(_toConsumableArray(citas),[cita]));};//Funcion que eliminar una cita por su id\nvar eliminarCita=function eliminarCita(id){var nuevasCitas=citas.filter(function(cita){return cita.id!==id;});setCitas(nuevasCitas);};var titulo=citas.length>0?'Administra tus citas':'No hay citas';return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Administrador de Pacientes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"one-half column\",children:/*#__PURE__*/_jsx(Formulario,{crearCita:crearCita})}),/*#__PURE__*/_jsxs(\"div\",{className:\"one-half column\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\" \",titulo,\" \"]}),citas.map(function(cita){return/*#__PURE__*/_jsx(Cita,{cita:cita,eliminarCita:eliminarCita},cita.id);})]})]})})]})});}export default App;","map":{"version":3,"sources":["/Users/roger/Documents/ROGER/CURSO Apps/citas/src/App.js"],"names":["React","Fragment","useState","useEffect","Formulario","Cita","App","citasIniciales","localStorage","getItem","citas","setCitas","setItem","JSON","stringify","crearCita","cita","eliminarCita","id","nuevasCitas","filter","titulo","length","map"],"mappings":"waAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CAIA,QAASC,CAAAA,GAAT,EAAe,CAEb;AAEA,GAAIC,CAAAA,cAAc,CAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAArB,CAEA,GAAI,CAACF,cAAL,CAAqB,CACnBA,cAAc,CAAG,EAAjB,CACD,CAED;AAVa,cAWaL,QAAQ,CAACK,cAAD,CAXrB,wCAWNG,KAXM,eAWCC,QAXD,eAab;AAEAR,SAAS,CAAC,UAAM,CAGd,GAAII,CAAAA,cAAc,CAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAArB,CACA,GAAIF,cAAJ,CAAoB,CAClBC,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAA9B,EACD,CAFD,IAEO,CACLF,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAe,EAAf,CAA9B,EACD,CACF,CATQ,CASN,CAACJ,KAAD,CATM,CAAT,CAWA;AAEA,GAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,IAAI,CAAI,CAExBL,QAAQ,8BACHD,KADG,GAENM,IAFM,GAAR,CAKD,CAPD,CAUA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,EAAE,CAAI,CACzB,GAAMC,CAAAA,WAAW,CAAGT,KAAK,CAACU,MAAN,CAAa,SAAAJ,IAAI,QAAIA,CAAAA,IAAI,CAACE,EAAL,GAAYA,EAAhB,EAAjB,CAApB,CACAP,QAAQ,CAACQ,WAAD,CAAR,CACD,CAHD,CAMA,GAAME,CAAAA,MAAM,CAAGX,KAAK,CAACY,MAAN,CAAe,CAAf,CAAmB,sBAAnB,CAA4C,cAA3D,CAEA,mBACE,KAAC,QAAD,wBACE,aAAK,SAAS,CAAC,KAAf,wBAEE,mDAFF,cAIE,YAAK,SAAS,CAAC,WAAf,uBACE,aAAK,SAAS,CAAC,KAAf,wBACE,YAAK,SAAS,CAAC,iBAAf,uBACE,KAAC,UAAD,EACE,SAAS,CAAEP,SADb,EADF,EADF,cAME,aAAK,SAAS,CAAC,iBAAf,wBACE,0BAAMM,MAAN,OADF,CAGIX,KAAK,CAACa,GAAN,CAAU,SAAAP,IAAI,qBACZ,KAAC,IAAD,EAEE,IAAI,CAAEA,IAFR,CAGE,YAAY,CAAEC,YAHhB,EACOD,IAAI,CAACE,EADZ,CADY,EAAd,CAHJ,GANF,GADF,EAJF,GADF,EADF,CA+BD,CAED,cAAeZ,CAAAA,GAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport Formulario from './components/Formulario';\nimport Cita from './components/Cita';\n\n\n\nfunction App() {\n\n  //Citas en localStorage\n\n  let citasIniciales = localStorage.getItem('cita');\n\n  if (!citasIniciales) {\n    citasIniciales = []\n  }\n\n  //Arreglo de citas\n  const [citas, setCitas] = useState(citasIniciales);\n\n  //Use Effect para realizar ciertas operaciones cuando el state cambia\n\n  useEffect(() => {\n\n\n    let citasIniciales = localStorage.getItem('cita');\n    if (citasIniciales) {\n      localStorage.setItem('citas', JSON.stringify(citas));\n    } else {\n      localStorage.setItem('citas', JSON.stringify([]));\n    }\n  }, [citas]);\n\n  //Funcion que tome las citas actuales y agregue la nueva\n\n  const crearCita = cita => {\n\n    setCitas([\n      ...citas,\n      cita\n    ])\n\n  }\n\n\n  //Funcion que eliminar una cita por su id\n  const eliminarCita = id => {\n    const nuevasCitas = citas.filter(cita => cita.id !== id);\n    setCitas(nuevasCitas);\n  }\n\n\n  const titulo = citas.length > 0 ? 'Administra tus citas' : 'No hay citas'\n\n  return (\n    <Fragment>\n      <div className=\"App\">\n\n        <h1> Administrador de Pacientes</h1>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"one-half column\">\n              <Formulario\n                crearCita={crearCita}\n              />\n            </div>\n            <div className=\"one-half column\">\n              <h1> {titulo} </h1>\n              {\n                citas.map(cita => (\n                  <Cita\n                    key={cita.id}\n                    cita={cita}\n                    eliminarCita={eliminarCita}\n                  />\n                ))\n              }\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}